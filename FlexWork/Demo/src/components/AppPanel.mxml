<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="800" minHeight="500"
		 creationComplete="group1_creationCompleteHandler(event)"
		 >
	<fx:Metadata>
		[Event(name="commit", type="events.CustomEvent")]
		[Event(name="cancel", type="events.CustomEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import entities.AppConfig;
			
			import events.CustomEvent;
			
			import mx.events.FlexEvent;
			import mx.utils.UIDUtil;
			
			import utils.MessageBox;
			import utils.ToolsUtil;
			private var _appConfig:AppConfig;
			private var _mode:uint;
			[Bindable]
			private var name_:String;
			[Bindable]
			private var appId:String;
			[Bindable]
			private var categoryId:String;
			[Bindable]
			private var priority:int;
			[Bindable]
			private var description:String;
			[Bindable]
			private var visible_:Boolean;
			[Bindable]
			private var param:String;
			[Bindable]
			private var multiInstance:Boolean;
			[Bindable]
			private var icon:String;
			[Bindable]
			private var path:String;

			public function get appConfig():AppConfig
			{
				var appConfig:AppConfig = new AppConfig();
				appConfig.name = name_;
				appConfig.appId = appId;
				appConfig.icon =icon;
				appConfig.path =path;
				appConfig.description = description;
				appConfig.visible = visible_;
				appConfig.priority = priority;
				appConfig.multiInstance = multiInstance;
				appConfig.param = param;
				appConfig.categoryId = categoryId;
				return appConfig;
			}

			public function set appConfig(value:AppConfig):void
			{
				_appConfig = value;
				if(value!=null){
					name_ = value.name;
					appId = value.appId;
					icon = value.icon;
					path = value.path;
					description = value.description;
					visible_ = value.visible;
					priority = value.priority;
					multiInstance = value.multiInstance;
					param = value.param;
					categoryId = value.categoryId;
				}
			}

			public function get mode():uint
			{
				return _mode;
			}

			public function set mode(value:uint):void
			{
				_mode = value;
				if(txt_categoryId != null){
					if(value == DgcMenu.ADD){
						txt_appId.editable = true;
					}else{
						txt_appId.editable = false;
					}
				}
			}


			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.mode = this.mode;
			}
			
			
			protected function btn_cancel_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.dispatchEvent(new CustomEvent("cancel",null));
				
			}
			
			protected function btn_save_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var checkResult:Array = checkData();
				if(checkResult.length >0){
					var msg:String = "";
					for(var i:int=0;i<checkResult.length;i++){
						msg += (i+1) + "、" + checkResult[i] + "\r\n";
					}
					MessageBox.show(msg);
					return;
				}
				var data:Object = {};
				data = appConfig.appId;
				this.dispatchEvent(new CustomEvent("commit",data));
			}
			
			protected function txt_appId_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(appId == null || appId ==""){
					appId = getNewAppId(); 
				}
				txt_appId.selectAll();
			}
			private function getNewAppId():String{
				return UIDUtil.createUID();
			}
			private function checkData():Array{
				var result:Array = [];
				if(txt_appId.text == ""){
					result.push("模块ID不能为空");
				}
				if(txt_categoryId.text != ""){
					if(txt_icon.text == ""){
						result.push("存在目录ID时，图标不能为空，请填入图标的相对路径");
					}
					if(txt_path.text == ""){
						result.push("存在目录ID时，模块路径不能为空，请填入对应的Swf文件路径");
					}
				}
				if(txt_name.text == ""){
					result.push("模块名称不能为空");
				}
				if(txt_param.text != "" && ToolsUtil.jsonToObject(txt_param.text) == null){
					result.push("参数不符合Json表达式格式");
				}
				return result;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer top="8" left="15" right="15" height="30">
		<s:HGroup gap="15" right="10" height="100%" verticalAlign="middle" horizontalAlign="right">
			<s:Button id="btn_save" label="保存" click="btn_save_clickHandler(event)"/>
			<s:Button id="btn_cancel" label="取消" click="btn_cancel_clickHandler(event)" />
		</s:HGroup>
	</s:BorderContainer>
	<s:BorderContainer top="43" left="15" right="15" bottom="10">
		<s:Label left="53" top="21" text="* 模块ID：" color="red"/>
		<s:TextInput id="txt_appId" left="110" top="15" width="195" text="@{appId}" click="txt_appId_clickHandler(event)" />
		<s:Label left="53" top="55" text="目录ID："/>
		<s:TextInput id="txt_categoryId" left="110" top="49" width="195" text="@{categoryId}" toolTip="若不填，为添加一个目录，而非具体的模块"/>
		<s:Label left="43" top="89" text="模块路径："/>
		<s:TextInput id="txt_path" left="110" top="82" width="195" text="@{path}"/>
		<s:Label left="32" top="118" text="是否多实例："/>
		<s:CheckBox id="chBox_multiInstance" x="111" y="112" selected="@{multiInstance}"/>
		<s:Label left="350" top="25" text="* 模块名称："  color="red"/>
		<s:TextInput id="txt_name" left="418" top="17" width="190" text="@{name_}"/>
		<s:Label left="371" top="59" text="图标："/>
		<s:TextInput id="txt_icon" left="418" top="51" width="190" text="@{icon}"/>
		
		<s:Label left="373" top="88" text="排序："/>
		<s:ComboBox id="cmBox_priority" x="418" y="82" width="79" selectedItem="@{priority}">
			<s:ArrayList>
				<fx:int>0</fx:int>
				<fx:int>1</fx:int>
				<fx:int>2</fx:int>
				<fx:int>3</fx:int>
				<fx:int>4</fx:int>
				<fx:int>5</fx:int>
				<fx:int>6</fx:int>
				<fx:int>7</fx:int>
				<fx:int>8</fx:int>
				<fx:int>9</fx:int>
				<fx:int>10</fx:int>
				<fx:int>11</fx:int>
				<fx:int>12</fx:int>
				<fx:int>13</fx:int>
				<fx:int>14</fx:int>
				<fx:int>15</fx:int>
			</s:ArrayList>
		</s:ComboBox>
		<s:Label left="349" top="118" text="是否可见："/>
		<s:CheckBox id="chBox_visiable" x="420" y="115" selected="@{visible_}"/>
		<s:Label left="66" top="149" text="参数："/>
		<s:TextInput id="txt_param" left="111" top="142" width="497" text="@{param}"/>
		<s:Label left="66" top="180" text="说明：" />
		<s:TextArea id="txt_description" x="111" y="177" width="497" height="97" text="@{description}"/>
		
	</s:BorderContainer>
</s:Group>
