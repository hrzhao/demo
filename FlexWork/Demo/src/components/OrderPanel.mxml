<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 creationComplete="group1_creationCompleteHandler(event)" xmlns:UI="common.UI.*"
		 >
	<fx:Script>
		<![CDATA[
			import entities.ResultObject;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			
			import plugin.OrdersMng;
			
			import utils.MessageBox;
			import utils.RemoteExt;
			private var _data:Object;
			private var ro:RemoteExt = new RemoteExt("orderService");
			public var dg_Order:SuperAdvancedDataGrid;
			[Bindable]
			public function get data():Object
			{
				return _data;
			}

			public function set data(value:Object):void
			{
				_data = value;
				dataChange = true;
			}
			public function fixSelection():void{
				var selectedIndex:int = -1;
				if(data != null && data.hasOwnProperty("workerId")){
					var workerId:int = data.workerId;
					if(workerId>=0){
						var i:int = 0;
						for each(var item:Object in workerList){
							if( i == 0 ){
								i++;
								continue;
							}
							if(item.id == workerId){
								selectedIndex = i;
								break;
							}
							i++;
						}
					}
				}
				workerSelectedIndex = selectedIndex;
			}
			
			override protected function commitProperties():void
			{
				// TODO Auto Generated method stub
				super.commitProperties();
				if(dataChange){
					dataChange = false;
					fixSelection();
				}
			}
			
			
			private function dateformate(obj:Object):String  
			{
				if(obj == null){
					return "无";
				}
				return df.format(obj);
			}
			[Bindable]
			private var workerList:ArrayCollection;
			[Bindable]
			private var workerSelectedIndex:int = -1;
			private var statusSelectedIndex:int = -1;

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				ro.call("getWorkerList",getWorkerList_result,null,1);
			}
			private function getWorkerList_result(result:ResultObject):void{
				if(result && result.state == ResultObject.SUCCESS && result.data != null){
					workerList = result.data as ArrayCollection;
					if(workerList == null || workerList.length == 0){
						workerList = new ArrayCollection();
					}
					workerList.addItemAt("",0);
					dataChange = true;
					this.invalidateProperties();
				}
			}
			private var dataChange:Boolean = false;
			
			/**
			 * 0、可随意更改状态
			 */
			[Bindable]
			public var option:int = 0 ;
			
			protected function btn_send_clickHandler(event:MouseEvent):void
			{
				if(data != null && data.status == 0){
				
					if(ddl_worker.selectedItem == null || ddl_worker.selectedItem == ""){
						Alert.show("请选择配送工人");
						return;
					}
					progressLabel.visible = true;
					ro.call("changeOrder",sendPrintOrder_hander,faultHandler,data.id,1,ddl_worker.selectedItem.id);//1、正在配送
				}else{
					Alert.show("此订单状态不可操作“打印配送”","提示");
				}
			}
			private function sendPrintOrder_hander(result:ResultObject):void{
				progressLabel.visible = false;
				if(result.state == ResultObject.SUCCESS){
					if(dg_Order.dataProvider is ArrayCollection){
						var ordersList:ArrayCollection = dg_Order.dataProvider as ArrayCollection;
						var itemIndex:int = ordersList.getItemIndex(data);
						if(itemIndex>=0){
							ordersList.removeItemAt(itemIndex);
							ordersList.addItemAt(result.data,itemIndex);
						}
					}
					this.data = result.data;
					if(this.data != null){
						if(this.data.status == 1){
							Alert.show("修改成功，订单打印中...");
						}else if(this.data.status == 2){
							Alert.show("修改成功");
						}
					}else{
						//
					}
					invalidateProperties();
				}else{
					Alert.show("修改失败");
				}
				
			}
			
			private function faultHandler(event:FaultEvent):void{
				progressLabel.visible = false;
				MessageBox.show(event.message.toString());
			}
			
			protected function btn_finishSend_clickHandler(event:MouseEvent):void
			{
				progressLabel.visible = false;
				if(data != null && data.status == 1){
					ro.call("changeOrder",sendPrintOrder_hander,faultHandler,data.id,2,data.workerId);//1、正在配送
				}else{
					Alert.show("此订单状态不可操作“完成配送”","提示");
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DateTimeFormatter id="df" dateTimePattern="yyyy-MM-dd HH:mm:ss"/>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer top="8" left="15" right="15" height="30">
		<s:HGroup horizontalAlign="right" verticalAlign="middle" width="100%" height="100%">
			<s:Button id="btn_send" label="打印配送" click="btn_send_clickHandler(event)" enabled="{data.status == 0}"/>
			<s:Button id="btn_finishSend" label="完成配送" click="btn_finishSend_clickHandler(event)" enabled="{data.status == 1}" />
		</s:HGroup>
	</s:BorderContainer>
	<s:BorderContainer top="43" left="15" right="15" bottom="10">
		<s:Label left="64" top="28" text="序号："/>
		<s:Label id="lbl_id" left="115" top="26" text="{data.id}"/>
		<s:Label left="52" top="65" text="订单号："/>
		<s:Label id="lbl_orderNo" left="115" top="64" text="{data.orderNo}"/>
		<s:Label left="40" top="100" text="产品名称："/>
		<s:Label id="lbl_productName" x="115" y="100" text="{data.productName}"/>
		<s:Label left="41" top="142" text="生成时间：" />
		<s:Label id="lbl_intime" x="115" y="142" text="{dateformate(data.intime)}"/>
		<s:Label left="41" top="173" text="当前状态："/>
		<s:Label  left="116" top="173" text="{OrdersMng.ddl_status_list.getItemAt(data.status).label}"/>
		<s:Label left="41" top="211" text="工人选择："/>
		<s:DropDownList id="ddl_worker" left="115" top="205" dataProvider="{workerList}" 
						labelField="name" selectedIndex="{workerSelectedIndex}"  enabled="{data.status == 0}"/>
		<s:Label left="435" top="28" text="数量："/>		<s:Label id="lbl_amount" left="485" top="26" text="{data.amount}"/>
		<s:Label left="411" top="58" text="确认时间："/>
		<s:Label id="lbl_confirmTime" left="485" top="61"  text="{dateformate(data.confirmTime)}"/>
	</s:BorderContainer>
	<UI:LabelProgress id="progressLabel" visible="false" />
</s:Group>
