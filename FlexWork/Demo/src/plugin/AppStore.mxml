<?xml version="1.0" encoding="utf-8"?>
<frame:EWModule xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:frame="frame.*" width="100%" height="100%"
				creationComplete="creationCompleteHandler(event)" xmlns:UI="common.UI.*" xmlns:common="common.*"
				>
	<fx:Script>
		<![CDATA[
			import com.siloon.plugin.rightClick.RightClickManager;
			
			import components.DG_ContextMenu;
			import components.MenuItem;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Menu;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridItemRenderer;
			import mx.controls.listClasses.IListItemRenderer;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import utils.MessageBox;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
			}
			[Bindable]
			private var appConfigList:ArrayCollection = new ArrayCollection();
			private function getAppConfigList():void{
				var op_getList:AbstractOperation = ro.getOperation("getAppConfigBeanList");
				op_getList.addEventListener(FaultEvent.FAULT,faultHandler);
				op_getList.addEventListener(ResultEvent.RESULT,function(event:ResultEvent):void{
					if(event.result.state == "success"){
						if(event.result.data is ArrayCollection){
							appConfigList = event.result.data;
						}
					}
				});
				op_getList.send();
			}
			protected function faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				MessageBox.show(event.message.toString());
			}
			
			protected function btn_search_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				getAppConfigList()
			}
			
			protected function dg_appConfig_rightClickHandler(event:MouseEvent):void
			{
				var item:uint;
				if(onRightClicked(event) == -1){
					item = DG_ContextMenu.MENUADD;
				}else if(onRightClicked(event) >=0){
					item = DG_ContextMenu.MENUADD;
					item += DG_ContextMenu.MENUEDIT;
					item += DG_ContextMenu.MENUDELETE;
				}else{
					return;
				}
				popUpMenu(item);
			}
			
			/**
			 * 当右键单击Tree的Item时，自动选择鼠标所在的当前项
			 * @param e 自定义右键菜单事件
			 * 
			 */
			private function onRightClicked(e:MouseEvent):int
			{
				var itemRender:AdvancedDataGridItemRenderer = null;  
				var selectedIndex:int = -2;
				if(!(e.target.owner is AdvancedDataGrid))
					return selectedIndex;
				var dg:AdvancedDataGrid = e.target.owner as AdvancedDataGrid;
				if(e.target is AdvancedDataGridItemRenderer){
					itemRender = AdvancedDataGridItemRenderer(e.target);
					if(itemRender != null) {  
						selectedIndex = dg.itemRendererToIndex(itemRender);
					}  
				}else{
					selectedIndex = -1;
				}
				if(dg_appConfig.selectedIndex != selectedIndex){
					dg.selectedIndex = selectedIndex;
				}
				return selectedIndex;
			}
			private var menu:Menu = null;
			private function popUpMenu(item:uint):void{
				if(menu!=null){
					menu.removeEventListener(MenuEvent.ITEM_CLICK,menuItemClick_Handler);
					menu.hide();
					menu = null;
				}
				
				menu = DG_ContextMenu.createMenu(this,item,false);
				
				var point:Point = localToGlobal(new Point(mouseX,mouseY));
				menu.addEventListener(MenuEvent.ITEM_CLICK,menuItemClick_Handler);
				menu.show(point.x,point.y);
			}
			
			protected function menuItemClick_Handler(event:MenuEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			protected function dg_appConfig_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
//				MessageBox.show("click"+event.localX+"_"+event.localY);
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject id="ro" destination="frameService" />
	</fx:Declarations>
	<s:Line top="27" right="0" left="0">
		<s:stroke>
			<s:SolidColorStroke color="0xb4cadc" weight="1" />
		</s:stroke>
	</s:Line>
	<common:CloseableTabBar id="tabbar" left="5" top="3" maxWidth="955" dataProvider="{this.viewStack}" 
									   lockedTabCount="1" height="25" buttonMode="true" labelField="label">
	</common:CloseableTabBar>
	<mx:ViewStack id="viewStack" width="100%" top="28" height="100%">
		<s:NavigatorContent width="100%" height="100%" label="模块列表">
			<s:BorderContainer  width="100%" height="100%" borderVisible="false" backgroundColor="#bebebe">
				<s:BorderContainer top="5" right="2" left="2" height="28" borderColor="#808080" backgroundColor="#bebebe">
					<s:Label left="27" top="7" text="模块名称"/>
					<s:TextInput id="txt_moduleName" left="90" top="2" width="180"/>
					<s:Button id="btn_search" right="40" top="2" label="查询" click="btn_search_clickHandler(event)"/>
				</s:BorderContainer>
				<mx:AdvancedDataGrid id="dg_appConfig" width="100%" height="100%" top="35" 
									 horizontalScrollPolicy="auto" verticalScrollPolicy="auto"
									 dataProvider="{appConfigList}"
									 sortExpertMode="true"
									 rightClick="dg_appConfig_rightClickHandler(event)"
									 click="dg_appConfig_clickHandler(event)"
									 
									 >
					<mx:columns>
						<mx:AdvancedDataGridColumn dataField="appId" headerText="应用ID" width="150"/>
						<mx:AdvancedDataGridColumn dataField="name" headerText="名称" width="120"/>
						<mx:AdvancedDataGridColumn dataField="categoryId" headerText="目录ID" width="150"/>
						<mx:AdvancedDataGridColumn dataField="param" headerText="参数" width="120"/>
						<mx:AdvancedDataGridColumn dataField="multiInstance" headerText="多实例" width="60"/>
						<mx:AdvancedDataGridColumn dataField="description" headerText="说明" width="120"/>
						<mx:AdvancedDataGridColumn dataField="path" headerText="路径" width="80"/>
						<mx:AdvancedDataGridColumn dataField="order" headerText="排序" width="40"/>
						<mx:AdvancedDataGridColumn dataField="icon" headerText="图标" width="80"/>
						
					</mx:columns>
				</mx:AdvancedDataGrid>
			</s:BorderContainer>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%"  label="修改模块">
			
		</s:NavigatorContent>
	</mx:ViewStack>
</frame:EWModule>
