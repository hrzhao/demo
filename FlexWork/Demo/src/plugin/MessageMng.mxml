<?xml version="1.0" encoding="utf-8"?>
<frame:EWModule xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:frame="frame.*" width="100%" height="100%"
				creationComplete="ewmodule1_creationCompleteHandler(event)" xmlns:UI="common.UI.*" xmlns:common="common.*" xmlns:components="components.*"
				>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import utils.MessageBox;
			[Bindable]
			public var title:String = "消息列表";
			[Bindable]
			public var messageList:ArrayCollection = new ArrayCollection();
			
			private function faultHandler(event:FaultEvent):void{
				hideLoading();
				MessageBox.show(event.message.toString());
			}
			private function showLoading(notice:String):void{
				if(notice != null){
					progressLabel.notice = notice;
				}
				progressLabel.visible = true;
				
			}
			private function hideLoading():void{
				progressLabel.visible = false;
			}
			
			protected function ewmodule1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				
			}
			private var op_getMessageList:AbstractOperation = null;
			private function getMessageList():void{
				if(op_getMessageList == null){
					op_getMessageList = ro.getOperation("getMessageBeanList");
					op_getMessageList.addEventListener(FaultEvent.FAULT,faultHandler,false,0,true);
					op_getMessageList.addEventListener(ResultEvent.RESULT,op_getMessageList_resultHandler,false,0,true);
				}
				op_getMessageList.send();
				showLoading("正在查询...");
			}
			private function op_getMessageList_resultHandler(event:ResultEvent):void{
				if(event.result.state == "success"){
					if(event.result.data is ArrayCollection){
						messageList = event.result.data;
						hideLoading();
					}
				}
			}
			protected function btn_search_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				getMessageList();
			}
			private function dateformate(item:Object, column:AdvancedDataGridColumn):String  
			{
				return df.format(item[column.dataField]);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RemoteObject id="ro" destination="messageServices"/> 
		<s:DateTimeFormatter id="df" dateTimePattern="yyyy-MM-dd HH:mm:ss"/>
	</fx:Declarations>
	<s:Line top="27" right="0" left="0">
		<s:stroke>
			<s:SolidColorStroke color="0xb4cadc" weight="1" />
		</s:stroke>
	</s:Line>
	<common:CloseableTabBar id="tabbar" left="5" top="3" maxWidth="955" dataProvider="{viewStack}" 
							lockedTabCount="2" height="25" buttonMode="true" labelField="label">
	</common:CloseableTabBar>
	<mx:ViewStack id="viewStack" width="100%" top="28" height="100%">
		<s:NavigatorContent width="100%" height="100%" label="{title}">
			<s:Group  width="100%" height="100%" >
				<s:BorderContainer backgroundColor="#DDDDDD" borderColor="#808080" 
								   top="8" left="15" right="15" height="30">
					<s:Label left="28" top="8" text="名称："/>
					<s:TextInput id="txt_moduleName" left="88" top="3" width="180"/>
					<s:Button id="btn_search" right="10" top="3" label="查询" click="btn_search_clickHandler(event)"/>
				</s:BorderContainer>
				<mx:AdvancedDataGrid id="dg_appConfig" top="43" left="15" right="15" bottom="10"
									 horizontalScrollPolicy="auto" verticalScrollPolicy="auto"
									 dataProvider="{messageList}"
									 sortExpertMode="true">
					<mx:columns>
						<mx:AdvancedDataGridColumn dataField="fromUserName" headerText="微信客户ID" width="250"/>
						<mx:AdvancedDataGridColumn dataField="toUserName" headerText="公众号ID" width="120"/>
						<mx:AdvancedDataGridColumn dataField="createTime" headerText="发送时间" width="140" labelFunction="{dateformate}"/>
						<mx:AdvancedDataGridColumn dataField="msgType" headerText="消息类型" width="65"/>
						<mx:AdvancedDataGridColumn dataField="content" headerText="内容" width="200"/>
						<mx:AdvancedDataGridColumn dataField="msgId" headerText="微信内部消息ID" width="150"/>
						<mx:AdvancedDataGridColumn dataField="event" headerText="事件类型" width="80"/>
						<mx:AdvancedDataGridColumn dataField="picURL" headerText="图片URL" width="140"/>
						<mx:AdvancedDataGridColumn dataField="innerType" headerText="内部类型" width="80"/>
						<mx:AdvancedDataGridColumn dataField="intime" headerText="记录时间" width="140" labelFunction="{dateformate}"/>
						
						<mx:AdvancedDataGridColumn dataField="location_x" headerText="经度" width="80"/>
						<mx:AdvancedDataGridColumn dataField="location_y" headerText="纬度" width="80"/>
						<mx:AdvancedDataGridColumn dataField="location_scale" headerText="缩放度" width="60"/>
						<mx:AdvancedDataGridColumn dataField="location_label" headerText="捕获地址" width="300"/>
					</mx:columns>
				</mx:AdvancedDataGrid>
				<!---
				<s:BorderContainer top="43" left="15" right="15" bottom="10">
				</s:BorderContainer>
				-->
				
			</s:Group>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="客户消息统计">
			<components:UserMsgListPanel id="userMsgListPanel" />
		</s:NavigatorContent>
	</mx:ViewStack>
	<UI:LabelProgress id="progressLabel" visible="false" />
</frame:EWModule>
