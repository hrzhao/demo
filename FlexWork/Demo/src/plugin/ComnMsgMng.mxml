<?xml version="1.0" encoding="utf-8"?>
<frame:EWModule xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:frame="frame.*" width="100%" height="100%" xmlns:msg="components.msg.*"
				creationComplete="ewmodule1_creationCompleteHandler(event)" xmlns:UI="common.UI.*" xmlns:common="common.*"
				>
	<fx:Script>
		<![CDATA[
			import components.msg.ComnMsgReply;
			
			import events.CustomEvent;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import utils.MessageBox;
			protected function mouseWheelChangingHandler(event:FlexMouseEvent):void
			{
				event.preventDefault();
				var modifier:int = 20;
				var delta:Number = Number(event.delta) * modifier;
				var vPos:Number = msgGroup.verticalScrollPosition;
				var maximum:Number = scroller.verticalScrollBar.maximum;
				
				if (delta < 0) 
					scroller.viewport.verticalScrollPosition =  Math.min(vPos - delta, maximum) ;        
				else
					scroller.viewport.verticalScrollPosition = Math.max(vPos - delta, 0);
			}
			
			
			protected function ewmodule1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				msgGroup.addEventListener("replyMsg",replyMsgHandler,true,0,false);
				var op_getComnMsgList:AbstractOperation = ro.getOperation("getComnMsgList");
				op_getComnMsgList.addEventListener(FaultEvent.FAULT,faultHandler);
				op_getComnMsgList.addEventListener(ResultEvent.RESULT,op_getComnMsgList_resultHandler);
				
				var begin:Date = new Date(); 
				begin.time = begin.time - 3 * 86401000;//用现在时间毫秒数减去一天毫秒数
				//customerName,beginTime,endTime,start,size,status,reverse
				op_getComnMsgList.send(null,begin,null,0,500,0,true);//获取后一百条 
				showProgress(null);
			}
			//回复消息
			private var labelCount:int = 0;
			private function replyMsgHandler(event:CustomEvent):void{
				var customerName:String = event.data.customerName;
				var c_realname:String = event.data.c_realname;
				var naviCont:NavigatorContent = findNaviContByName(customerName);
				if(naviCont == null){
					labelCount = viewStack.numElements == 1 ? 0 : labelCount;
					var label:String = "留言查看" + (++labelCount);
					naviCont = buildDetailNaviCont(label,customerName,c_realname);
					viewStack.addElement(naviCont);
				}
				viewStack.selectedChild = naviCont;
			}
			
			private function findNaviContByName(name:String):NavigatorContent{
				var result:NavigatorContent = null;
				if(name == null) return result;
				for each(var naviCont:NavigatorContent in viewStack.getChildren()){
					if(naviCont.name == name){
						result = naviCont;
					}
				}
				return result;
			}
			
			private function buildDetailNaviCont(label:String,name:String,realname:String):NavigatorContent{
				var naviCont:NavigatorContent = new NavigatorContent();
				naviCont.percentWidth = 100;
				naviCont.percentHeight = 100;
				naviCont.label = label;
				naviCont.name = name;
				var detailGroup:ComnMsgReply = new ComnMsgReply();
				detailGroup.percentWidth = 100;
				detailGroup.percentHeight = 100;
				detailGroup.customerName = name;
				detailGroup.realname = realname;
				detailGroup.module = this;
				naviCont.addElement(detailGroup);
				return naviCont;
			}
			
			
			
			
			protected function faultHandler(event:FaultEvent):void{
				hideProgress();
				MessageBox.show("请求失败\n" + event.message.toString());
			}
			[Bindable]
			private var data:ArrayCollection = new ArrayCollection();
			protected function op_getComnMsgList_resultHandler(event:ResultEvent):void{
				hideProgress();
				if(event.result != null){
					if(event.result.hasOwnProperty("data")){
						data = event.result.data;
					}
				}
				msgGroup.callLater(toTheEnd);
			}
			protected function showProgress(msg:String):void{
				if(msg != null){
					progressLabel.label = msg;
				}
				progressLabel.visible = true;
			}
			protected function hideProgress():void{
				progressLabel.visible = false;
			}
			private function toTheEnd():void{
					msgGroupVerticalLayout.verticalScrollPosition=msgGroup.contentHeight-msgGroup.height;
			}
			[Bindable]
			private var title:String="所有留言";
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RemoteObject id="ro" destination="comnmsgService"/>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:Line top="27" right="0" left="0">
		<s:stroke>
			<s:SolidColorStroke color="0xb4cadc" weight="1" />
		</s:stroke>
	</s:Line>
	<common:CloseableTabBar id="tabbar" left="5" top="3" maxWidth="955" dataProvider="{viewStack}" 
							lockedTabCount="1" height="25" buttonMode="true" labelField="label">
	</common:CloseableTabBar>
	<mx:ViewStack id="viewStack" width="100%" top="28" height="100%">
		<s:NavigatorContent width="100%" height="100%" label="{title}">
			<s:BorderContainer top="8" left="15" right="15" height="30">
				<s:Label left="28" top="8" text="名称："/>
				<s:TextInput id="txt_moduleName" left="88" top="3" width="180"/>
				<s:Button id="btn_search" right="10" top="3" label="查询" />
			</s:BorderContainer>
			<s:BorderContainer top="43" left="15" right="15" bottom="10">
				<s:Scroller width="60%" height="100%" left="0" mouseWheelChanging="mouseWheelChangingHandler(event)" id="scroller">
					<s:DataGroup id="msgGroup" width="100%" height="100%" itemRenderer="itemrenderer.ComnMsgRenderer" dataProvider="{data}">
						<s:layout>
							<s:VerticalLayout id="msgGroupVerticalLayout"/>
						</s:layout>
					</s:DataGroup>
				</s:Scroller>
			</s:BorderContainer>		
		</s:NavigatorContent>
	</mx:ViewStack>
	<UI:LabelProgress id="progressLabel" width="100%" height="100%" visible="false"/>
</frame:EWModule>
